spring:
  application:
    name: auth-service
  datasource:
    url: "jdbc:${DB_URL_AUTH}"
    username: ${DB_USERNAME_AUTH}
    password: ${DB_PASSWORD_AUTH}
    driver-class-name: "org.postgresql.Driver"
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      properties:
        enable.idempotence: true

    consumer:
      group-id: ${spring.application.name}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      enable-auto-commit: false
      properties:
        spring.json.trusted.packages: "*"

kafka:
  topics:
    patient-validated: ${PATIENT_VALIDATED_TOPIC:patient-validated-topic}
    validation-failed: ${VALIDATION_FAILED_TOPIC:validation-failed-topic}

    appointment-created: ${APPOINTMENT_CREATED_TOPIC:appointment-created-topic}

jwt:
  signer-key: "${SECRET_KEY_JWT}"
  expiration: 3600 # in seconds
  refresh:
    expiration: 36000

server:
  port: 0
  username-admin: ${ADMIN_USER_NAME}
  password-admin: ${ADMIN_PASSWORD}
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/

app:
  name: Hệ thống Đặt lịch khám chữa bệnh
  password-reset:
    token-expiry-minutes: 30
  frontend:
    reset-password-url: http://localhost:3000/reset-password
  upload:
    dir: uploads/avatars
    max-size: 5242880 # 5MB

service:
  user-profile:
    url: http://userprofile-service
  appointment:
    url: http://appointment-service